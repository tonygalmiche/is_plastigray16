<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>

        <!-- Gestionnaire des absences group -->
        <record model="res.groups" id="is_gestionnaire_des_absences_group" >
            <field name="name">Gestionnaire des absences</field>
            <field name="comment"></field>
            <field name="category_id" ref="is_groupe_plastigray_module_category"/>
        </record>

        <!-- Manager des absences group -->
        <record model="res.groups" id="is_manager_des_absences_group" >
            <field name="name">Manager des absences</field>
            <field name="comment">Donne accès aux demandes collectives, aux absences et au calendrier des absences</field>
            <field name="category_id" ref="is_groupe_plastigray_module_category"/>
        </record>


        <!-- hr_employee -->
        <record id="is_hr_employe_user_write_rule" model="ir.rule">
            <field name="name">Accès en modification à l'employé pour sa propre fiche</field>
            <field name="model_id" ref="model_hr_employee" />
            <field name="domain_force">[
                ('user_id', '=', user.id),
            ]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="1" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="0" name="perm_create" />
        </record>


       <record id="is_hr_employe_user_rule" model="ir.rule">
            <field name="name">Accès en consultation à tout le monde</field>
            <field name="model_id" ref="model_hr_employee" />
            <field name="domain_force">[]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="0" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="0" name="perm_create" />
        </record>


        <!--
        <record id="is_hr_employe_user_rule" model="ir.rule">
            <field name="name">Accès à la fiche employé à l'utilisateur en consultation, au valideur N1 et au valideur N2</field>
            <field name="model_id" ref="model_hr_employee" />
            <field name="domain_force">['|','|',
                ('user_id', '=', user.id),
                ('is_valideur_n1','=',user.id),
                ('is_valideur_n2','=',user.id),
            ]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="0" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="0" name="perm_create" />
        </record>
        -->

        <record id="is_hr_employe_gestionnaire_des_absences_rule" model="ir.rule">
            <field name="name">Accès à tous les emplyés en lecture au groupe Gestionnaire des absences</field>
            <field name="model_id" ref="model_hr_employee" />
            <field name="domain_force">[]</field>
            <field name="groups" eval="[(4, ref('is_gestionnaire_des_absences_group'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="0" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="0" name="perm_create" />
        </record>


        <record id="is_hr_employe_manager_rule" model="ir.rule">
            <field name="name">Accès complet à tous les employés au groupe Manager RH</field>
            <field name="model_id" ref="model_hr_employee" />
            <field name="domain_force">[]</field>
            <field name="groups" eval="[(4, ref('hr.group_hr_manager'))]"/>
            <field eval="1" name="perm_unlink" />
            <field eval="1" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="1" name="perm_create" />
        </record>



        <!-- is.demande.conges -->
        <record id="is_demande_conges_creation_rule" model="ir.rule">
            <field name="name">Demande de congés: Access to user in 'Brouillon' state</field>
            <field name="model_id" ref="model_is_demande_conges" />
            <field name="domain_force">['&amp;', ('state','=','creation'), '|', '|', '|', '|',
                ('createur_id', '=', user.id),
                ('demandeur_id', '=', user.id),
                ('valideur_n1','=',user.id),
                ('valideur_n2','=',user.id),
                ('responsable_rh_id','=',user.id) ]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="1" name="perm_unlink" />
            <field eval="1" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="1" name="perm_create" />
        </record>

        <record id="is_demande_conges_validation_n1_read_rule" model="ir.rule">
            <field name="name">Demande de congés: Read Access to user in 'niveau 1' state</field>
            <field name="model_id" ref="model_is_demande_conges" />
            <field name="domain_force">['&amp;', ('state','=','validation_n1'), '|',
                ('createur_id', '=', user.id),
                ('demandeur_id', '=', user.id)]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="0" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="0" name="perm_create" />
        </record>
        <record id="is_demande_conges_validation_n1_write_rule" model="ir.rule">
            <field name="name">Demande de congés: Write Access to user in 'niveau 1' state</field>
            <field name="model_id" ref="model_is_demande_conges" />
            <field name="domain_force">['&amp;', ('state','=','validation_n1'), '|', '|',
                ('valideur_n1', '=', user.id),
                ('valideur_n2', '=', user.id),
                ('responsable_rh_id', '=', user.id)]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="1" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="1" name="perm_create" />
        </record>

        <record id="is_demande_conges_validation_n2_read_rule" model="ir.rule">
            <field name="name">Demande de congés: Read Access to user in 'niveau 2' state</field>
            <field name="model_id" ref="model_is_demande_conges" />
            <field name="domain_force">['&amp;', ('state','=','validation_n2'), '|', '|',
                ('createur_id', '=', user.id),
                ('demandeur_id', '=', user.id),
                ('valideur_n1', '=', user.id)]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="0" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="0" name="perm_create" />
        </record>
        <record id="is_demande_conges_validation_n2_write_rule" model="ir.rule">
            <field name="name">Demande de congés: Write Access to user in 'niveau 2' state</field>
            <field name="model_id" ref="model_is_demande_conges" />
            <field name="domain_force">['&amp;', ('state','=','validation_n2'), '|',
                ('valideur_n2', '=', user.id),
                ('responsable_rh_id', '=', user.id)]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="1" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="1" name="perm_create" />
        </record>

        <record id="is_demande_conges_validation_rh_read_rule" model="ir.rule">
            <field name="name">Demande de congés: Read Access to user in 'validation rh' state</field>
            <field name="model_id" ref="model_is_demande_conges" />
            <field name="domain_force">['&amp;', ('state','=','validation_rh'), '|', '|', '|',
                ('createur_id', '=', user.id),
                ('demandeur_id', '=', user.id),
                ('valideur_n1','=',user.id),
                ('valideur_n2','=',user.id)]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="0" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="0" name="perm_create" />
        </record>
        <record id="is_demande_conges_validation_rh_write_rule" model="ir.rule">
            <field name="name">Demande de congés: Write Access to user in 'validation rh' state</field>
            <field name="model_id" ref="model_is_demande_conges" />
            <field name="domain_force">[('state','=','validation_rh'), ('responsable_rh_id', '=', user.id)]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="1" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="1" name="perm_create" />
        </record>



        <record id="is_demande_conges_solde_annuel_rule" model="ir.rule">
            <field name="name">Demande de congés: Access to user in 'solde - annule - refuse' state</field>
            <field name="model_id" ref="model_is_demande_conges" />
            <field name="domain_force">['&amp;', ('state','in',['solde','annule','refuse']), '|', '|', '|', '|',
                ('createur_id', '=', user.id),
                ('demandeur_id', '=', user.id),
                ('valideur_n1','=',user.id),
                ('valideur_n2','=',user.id),
                ('responsable_rh_id','=',user.id) ]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field eval="0" name="perm_unlink" />
            <field eval="0" name="perm_write" />
            <field eval="1" name="perm_read" />
            <field eval="0" name="perm_create" />
        </record>


    </data>
</openerp>
